package view;

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author charleshenriqueportoferreira
 */
public class Configuracao extends javax.swing.JFrame {

    int ckbSelecionados;

    /**
     * Creates new form Configuracao
     */
    public Configuracao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        fc_stopList = new javax.swing.JFileChooser();
        fc_baseDados = new javax.swing.JFileChooser();
        fc_stopFiles = new javax.swing.JFileChooser();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        ckb_1gram = new javax.swing.JCheckBox();
        ckb_2gram = new javax.swing.JCheckBox();
        ckb_3gram = new javax.swing.JCheckBox();
        lbl_ngram = new javax.swing.JLabel();
        rd_individual = new javax.swing.JRadioButton();
        rd_combinado = new javax.swing.JRadioButton();
        rd_individualCombinado = new javax.swing.JRadioButton();
        ckb_4gram = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        lbl_calculoTermoFrequencia = new javax.swing.JLabel();
        ckb_tf = new javax.swing.JCheckBox();
        ckb_tfLinear = new javax.swing.JCheckBox();
        ckb_tfIdf = new javax.swing.JCheckBox();
        ckb_tfLinearSmooth = new javax.swing.JCheckBox();
        ckb_tfIdfSmooth = new javax.swing.JCheckBox();
        ckb_boolean = new javax.swing.JCheckBox();
        txt_maxFreq = new javax.swing.JTextField();
        lbl_minFreq = new javax.swing.JLabel();
        lbl_maxFreq = new javax.swing.JLabel();
        ckb_frequencia = new javax.swing.JCheckBox();
        txt_minFreq = new javax.swing.JTextField();
        txt_maxFiles = new javax.swing.JTextField();
        txt_minFiles = new javax.swing.JTextField();
        lbl_minFiles = new javax.swing.JLabel();
        ckb_arquivos = new javax.swing.JCheckBox();
        lbl_maxFiles = new javax.swing.JLabel();
        ckb_stdDev = new javax.swing.JCheckBox();
        txt_stdDev = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        lbl_stopFiles = new javax.swing.JLabel();
        lbl_baseDados = new javax.swing.JLabel();
        txt_stopFiles = new javax.swing.JTextField();
        btn_stopFiles = new javax.swing.JButton();
        txt_BaseDados = new javax.swing.JTextField();
        btn_BaseDados = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_stopFileNames = new javax.swing.JTextArea();
        btn_selectStopFiles = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btn_CriarScript = new javax.swing.JButton();
        lbl_Titulo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_script = new javax.swing.JTextArea();

        fc_stopList.setCurrentDirectory(new File(System.getProperty("user.dir")));
        fc_stopList.setDialogTitle("StopList");
        fc_stopList.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        fc_baseDados.setCurrentDirectory(new File(System.getProperty("user.dir")));
        fc_baseDados.setDialogTitle("Base de Dados");
        fc_baseDados.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        fc_stopFiles.setCurrentDirectory(new File(System.getProperty("user.dir")));
        fc_stopFiles.setDialogTitle("StopFiles");
        fc_stopFiles.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        fc_stopFiles.setMultiSelectionEnabled(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ckb_1gram.setText("1");
        ckb_1gram.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_1gramStateChanged(evt);
            }
        });

        ckb_2gram.setSelected(true);
        ckb_2gram.setText("2");
        ckb_2gram.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_2gramStateChanged(evt);
            }
        });

        ckb_3gram.setText("3");
        ckb_3gram.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_3gramStateChanged(evt);
            }
        });

        lbl_ngram.setText("n-gram:");

        buttonGroup1.add(rd_individual);
        rd_individual.setSelected(true);
        rd_individual.setText("individual");

        buttonGroup1.add(rd_combinado);
        rd_combinado.setText("combinado");
        rd_combinado.setEnabled(false);

        buttonGroup1.add(rd_individualCombinado);
        rd_individualCombinado.setText("individual e combinado");
        rd_individualCombinado.setEnabled(false);

        ckb_4gram.setText("4");
        ckb_4gram.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_4gramStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbl_ngram)
                .addGap(18, 18, 18)
                .addComponent(ckb_1gram)
                .addGap(18, 18, 18)
                .addComponent(ckb_2gram)
                .addGap(18, 18, 18)
                .addComponent(ckb_3gram)
                .addGap(18, 18, 18)
                .addComponent(ckb_4gram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rd_individual)
                .addGap(18, 18, 18)
                .addComponent(rd_combinado)
                .addGap(18, 18, 18)
                .addComponent(rd_individualCombinado)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckb_1gram)
                    .addComponent(ckb_2gram)
                    .addComponent(ckb_3gram)
                    .addComponent(lbl_ngram)
                    .addComponent(rd_individual)
                    .addComponent(rd_combinado)
                    .addComponent(rd_individualCombinado)
                    .addComponent(ckb_4gram))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_calculoTermoFrequencia.setText("Termo de Frequência");

        ckb_tf.setText("tf");
        ckb_tf.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_tfStateChanged(evt);
            }
        });

        ckb_tfLinear.setText("tf-linear");
        ckb_tfLinear.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_tfLinearStateChanged(evt);
            }
        });

        ckb_tfIdf.setSelected(true);
        ckb_tfIdf.setText("tf-idf");
        ckb_tfIdf.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_tfIdfStateChanged(evt);
            }
        });

        ckb_tfLinearSmooth.setText("tf-linear-smooth");
        ckb_tfLinearSmooth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_tfLinearSmoothStateChanged(evt);
            }
        });

        ckb_tfIdfSmooth.setText("tf-idf-smooth");
        ckb_tfIdfSmooth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_tfIdfSmoothStateChanged(evt);
            }
        });

        ckb_boolean.setText("boolean");
        ckb_boolean.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_booleanStateChanged(evt);
            }
        });

        txt_maxFreq.setText("500");
        txt_maxFreq.setEnabled(false);

        lbl_minFreq.setText("min:");

        lbl_maxFreq.setText("max:");

        ckb_frequencia.setText("Frequência");
        ckb_frequencia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_frequenciaStateChanged(evt);
            }
        });

        txt_minFreq.setText("1");
        txt_minFreq.setEnabled(false);

        txt_maxFiles.setText("500");
        txt_maxFiles.setEnabled(false);

        txt_minFiles.setText("1");
        txt_minFiles.setEnabled(false);

        lbl_minFiles.setText("min:");

        ckb_arquivos.setText("Arquivos");
        ckb_arquivos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_arquivosStateChanged(evt);
            }
        });

        lbl_maxFiles.setText("max:");

        ckb_stdDev.setText("std_dev");
        ckb_stdDev.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_stdDevStateChanged(evt);
            }
        });

        txt_stdDev.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ckb_frequencia)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_maxFreq)
                            .addComponent(lbl_minFreq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_minFreq, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ckb_stdDev))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_maxFreq, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_stdDev, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_calculoTermoFrequencia)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_tf)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_tfLinear)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_tfIdf)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_maxFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_minFiles)
                        .addGap(21, 21, 21)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_minFiles)
                    .addComponent(txt_maxFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(ckb_tfLinearSmooth)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_tfIdfSmooth)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_boolean))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addComponent(ckb_arquivos)))
                .addGap(92, 92, 92))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_calculoTermoFrequencia)
                    .addComponent(ckb_tf)
                    .addComponent(ckb_tfLinear)
                    .addComponent(ckb_tfIdf)
                    .addComponent(ckb_tfLinearSmooth)
                    .addComponent(ckb_tfIdfSmooth)
                    .addComponent(ckb_boolean))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbl_minFreq)
                    .addComponent(ckb_frequencia)
                    .addComponent(ckb_arquivos)
                    .addComponent(lbl_minFiles)
                    .addComponent(txt_minFreq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_minFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckb_stdDev))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_maxFreq)
                    .addComponent(txt_maxFreq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_maxFiles)
                    .addComponent(txt_maxFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_stdDev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_stopFiles.setText("diretório StopFIles:");

        lbl_baseDados.setText("Base de Dados");

        btn_stopFiles.setText("...");
        btn_stopFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopFilesActionPerformed(evt);
            }
        });

        btn_BaseDados.setText("...");
        btn_BaseDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BaseDadosActionPerformed(evt);
            }
        });

        txt_stopFileNames.setColumns(20);
        txt_stopFileNames.setRows(5);
        jScrollPane1.setViewportView(txt_stopFileNames);

        btn_selectStopFiles.setText("...");
        btn_selectStopFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectStopFilesActionPerformed(evt);
            }
        });

        jLabel1.setText("stopFiles:");

        btn_CriarScript.setText("Criar Scritp");
        btn_CriarScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CriarScriptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lbl_stopFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(txt_stopFiles))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_selectStopFiles)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_stopFiles)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_baseDados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_CriarScript)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txt_BaseDados, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_BaseDados)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_stopFiles)
                    .addComponent(lbl_baseDados)
                    .addComponent(txt_stopFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_stopFiles)
                    .addComponent(txt_BaseDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_BaseDados))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btn_selectStopFiles)))
                        .addGap(3, 3, 3)
                        .addComponent(btn_CriarScript)
                        .addContainerGap(40, Short.MAX_VALUE))))
        );

        lbl_Titulo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lbl_Titulo.setText("Configurador PreTextExecutor");

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_script.setColumns(20);
        txt_script.setLineWrap(true);
        txt_script.setRows(5);
        jScrollPane2.setViewportView(txt_script);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_Titulo)
                .addGap(258, 258, 258))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbl_Titulo)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean isMaisDeUmGramSelecionado() {

        return (ckb_1gram.isSelected() && ckb_2gram.isSelected())
                | (ckb_1gram.isSelected() && ckb_3gram.isSelected())
                | (ckb_2gram.isSelected() && ckb_3gram.isSelected())
                | (ckb_1gram.isSelected() && ckb_4gram.isSelected())
                | (ckb_2gram.isSelected() && ckb_4gram.isSelected())
                | (ckb_3gram.isSelected() && ckb_4gram.isSelected());
    }

    private void ckb_1gramStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_1gramStateChanged
        if (isMaisDeUmGramSelecionado()) {
            habilitaRadioButtons();
        } else {
            desabilitaRadioButtons();
            selecionaIndividual();
        }
    }//GEN-LAST:event_ckb_1gramStateChanged

    private void selecionaIndividual() {
        rd_individual.setSelected(true);
    }

    private void habilitaRadioButtons() {
        rd_combinado.setEnabled(true);
        rd_individualCombinado.setEnabled(true);
    }

    private void desabilitaRadioButtons() {
        rd_combinado.setEnabled(false);
        rd_individualCombinado.setEnabled(false);
    }

    private void ckb_2gramStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_2gramStateChanged
        if (isMaisDeUmGramSelecionado()) {
            habilitaRadioButtons();
        } else {
            desabilitaRadioButtons();
            selecionaIndividual();
        }
    }//GEN-LAST:event_ckb_2gramStateChanged

    private void ckb_3gramStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_3gramStateChanged
        if (isMaisDeUmGramSelecionado()) {
            habilitaRadioButtons();
        } else {
            desabilitaRadioButtons();
            selecionaIndividual();
        }
    }//GEN-LAST:event_ckb_3gramStateChanged

    private void ckb_tfStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_tfStateChanged
        if (!isAlgumTermoFrequenciaSelecionado()) {
            selecioneTFIDF();
        }
    }//GEN-LAST:event_ckb_tfStateChanged

    private void ckb_tfLinearStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_tfLinearStateChanged
        if (!isAlgumTermoFrequenciaSelecionado()) {
            selecioneTFIDF();
        }
    }//GEN-LAST:event_ckb_tfLinearStateChanged

    private void ckb_tfIdfStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_tfIdfStateChanged
        if (!isAlgumTermoFrequenciaSelecionado()) {
            selecioneTFIDF();
        }
    }//GEN-LAST:event_ckb_tfIdfStateChanged

    private void ckb_tfLinearSmoothStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_tfLinearSmoothStateChanged
        if (!isAlgumTermoFrequenciaSelecionado()) {
            selecioneTFIDF();
        }
    }//GEN-LAST:event_ckb_tfLinearSmoothStateChanged

    private void ckb_tfIdfSmoothStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_tfIdfSmoothStateChanged
        if (!isAlgumTermoFrequenciaSelecionado()) {
            selecioneTFIDF();
        }
    }//GEN-LAST:event_ckb_tfIdfSmoothStateChanged

    private void ckb_booleanStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_booleanStateChanged
        if (!isAlgumTermoFrequenciaSelecionado()) {
            selecioneTFIDF();
        }
    }//GEN-LAST:event_ckb_booleanStateChanged

    private void ckb_frequenciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_frequenciaStateChanged
        if (ckb_frequencia.isSelected()) {
            txt_minFreq.setEnabled(true);
            txt_maxFreq.setEnabled(true);
            ckb_stdDev.setEnabled(false);

        } else {
            txt_minFreq.setEnabled(false);
            txt_maxFreq.setEnabled(false);
            ckb_stdDev.setEnabled(true);
        }
    }//GEN-LAST:event_ckb_frequenciaStateChanged

    private void ckb_arquivosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_arquivosStateChanged
        if (ckb_arquivos.isSelected()) {
            txt_minFiles.setEnabled(true);
            txt_maxFiles.setEnabled(true);
        } else {
            txt_minFiles.setEnabled(false);
            txt_maxFiles.setEnabled(false);
        }
    }//GEN-LAST:event_ckb_arquivosStateChanged

    private void btn_stopFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopFilesActionPerformed
        int returnVal = fc_stopList.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc_stopList.getSelectedFile();

            txt_stopFiles.setText(file.getName());

        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btn_stopFilesActionPerformed

    private void btn_BaseDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BaseDadosActionPerformed
        int returnVal = fc_baseDados.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc_baseDados.getSelectedFile();

            txt_BaseDados.setText(file.getName());

        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btn_BaseDadosActionPerformed

    private void btn_selectStopFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectStopFilesActionPerformed
        int returnVal = fc_stopFiles.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file[] = fc_stopFiles.getSelectedFiles();
            String fileNames = "";
            for (File file1 : file) {
                fileNames += file1.getName() + "\n";
            }
            txt_stopFileNames.setText(fileNames);

        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btn_selectStopFilesActionPerformed

    private void btn_CriarScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CriarScriptActionPerformed
        String scriptExecucao = "java -jar PretextExecutor.jar ";
        scriptExecucao += getParametroBaseDados();
        scriptExecucao += getParametroCorteArquivo();
        scriptExecucao += getParametroCorteFrequencia();
        scriptExecucao += getParametroNGram();
        scriptExecucao += getParametroNomeDirStopList();
        scriptExecucao += getParametroStopFiles();
        scriptExecucao += getParametroCorteDesvioPadrao();
        scriptExecucao += getParametroTermoFrequencia();

        txt_script.setText(scriptExecucao + "\n");
        System.out.println(scriptExecucao);
    }//GEN-LAST:event_btn_CriarScriptActionPerformed

    private void ckb_stdDevStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_stdDevStateChanged
        if (ckb_stdDev.isSelected()) {
            txt_stdDev.setEnabled(true);
            ckb_frequencia.setEnabled(false);

        } else {
            txt_stdDev.setEnabled(false);
            ckb_frequencia.setEnabled(true);
        }
    }//GEN-LAST:event_ckb_stdDevStateChanged

    private void ckb_4gramStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_4gramStateChanged
        if (isMaisDeUmGramSelecionado()) {
            habilitaRadioButtons();
        } else {
            desabilitaRadioButtons();
            selecionaIndividual();
        }
    }//GEN-LAST:event_ckb_4gramStateChanged

    private String getParametroCorteDesvioPadrao() {
        String desvioPadrao = "-d ";
        if (ckb_stdDev.isSelected()) {
            desvioPadrao += txt_stdDev.getText();
        } else {
            desvioPadrao += "0";
        }
        return desvioPadrao + " ";
    }

    private String getParametroTermoFrequencia() {
        String termoFrequencia = "-f ";
        termoFrequencia += ckb_tf.isSelected() ? "tf," : "";
        termoFrequencia += ckb_tfIdf.isSelected() ? "tfidf," : "";
        termoFrequencia += ckb_tfIdfSmooth.isSelected() ? "tfidfSmooth," : "";
        termoFrequencia += ckb_tfLinear.isSelected() ? "tflinear," : "";
        termoFrequencia += ckb_tfLinearSmooth.isSelected() ? "tflinearSmooth," : "";
        termoFrequencia += ckb_boolean.isSelected() ? "boolean," : "";

        termoFrequencia = termoFrequencia.substring(0, termoFrequencia.length() - 1);

        return termoFrequencia;
    }

    private String getParametroCorteFrequencia() {
        String corteFrequencia = "-mf ";
        if (ckb_frequencia.isSelected()) {
            String[] min = txt_minFreq.getText().split(",");
            String[] max = txt_maxFreq.getText().split(",");
            for (int i = 0; i < min.length; i++) {
                corteFrequencia += min[i] + "-" + max[i] + ",";
            }
        } else {
            corteFrequencia += "0-0,";
        }
        //retira a virgula do final
        corteFrequencia = corteFrequencia.substring(0, corteFrequencia.length() - 1);

        return corteFrequencia + " ";
    }

    private String getParametroCorteArquivo() {
        String corteArquivo = "-ma ";
        if (ckb_arquivos.isSelected()) {
            String[] min = txt_minFiles.getText().split(",");
            String[] max = txt_maxFiles.getText().split(",");
            for (int i = 0; i < min.length; i++) {
                corteArquivo += min[i] + "-" + max[i] + ",";
            }
        } else {
            corteArquivo += "0-0,";
        }
        //retira a virgula do final
        corteArquivo = corteArquivo.substring(0, corteArquivo.length() - 1);

        return corteArquivo + " ";
    }

    private String getParametroBaseDados() {
        return "-b " + txt_BaseDados.getText() + " ";
    }

    private String getParametroNomeDirStopList() {
        return "-sl " + txt_stopFiles.getText() + " ";
    }

    private String getParametroNGram() {
        String ngram = "-g ";
        if (rd_individual.isSelected()) {
            ngram += getIndividual();
        }
        if (rd_combinado.isSelected()) {
            ngram += getCombinado();
        }
        if (rd_individualCombinado.isSelected()) {
            ngram += getIndividual() + getCombinado();
        }
        return ngram.substring(0, ngram.length() - 1) + " ";
    }

    private String getCombinado() {
        String ngram = "";
        if (ckb_1gram.isSelected() && ckb_2gram.isSelected()) {
            ngram += 12 + ",";
        }
        if (ckb_2gram.isSelected() && ckb_3gram.isSelected()) {
            ngram += 23 + ",";
        }
        if (ckb_1gram.isSelected() && ckb_3gram.isSelected()) {
            ngram += 13 + ",";
        }
        if (ckb_1gram.isSelected() && ckb_4gram.isSelected()) {
            ngram += 14 + ",";
        }
        if (ckb_2gram.isSelected() && ckb_4gram.isSelected()) {
            ngram += 24 + ",";
        }
        if (ckb_3gram.isSelected() && ckb_4gram.isSelected()) {
            ngram += 34 + ",";
        }
        return ngram;
    }

    private String getIndividual() {
        String ngram = "";
        if (ckb_1gram.isSelected()) {
            ngram += 1 + ",";
        }
        if (ckb_2gram.isSelected()) {
            ngram += 2 + ",";
        }
        if (ckb_3gram.isSelected()) {
            ngram += 3 + ",";
        }
         if (ckb_4gram.isSelected()) {
            ngram += 4 + ",";
        }
        return ngram;
    }

    private String getParametroStopFiles() {
        String stopFiles = "-sf " + txt_stopFileNames.getText().replace("\n", ",");
        return stopFiles.substring(0, stopFiles.length() - 1) + " ";
    }

    private boolean isAlgumTermoFrequenciaSelecionado() {
        return ckb_tf.isSelected() | ckb_boolean.isSelected()
                | ckb_tfIdf.isSelected() | ckb_tfIdfSmooth.isSelected()
                | ckb_tfLinear.isSelected() | ckb_tfLinearSmooth.isSelected();
    }

    private void selecioneTFIDF() {
        ckb_tfIdf.setSelected(true);
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Configuracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new Configuracao().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_BaseDados;
    private javax.swing.JButton btn_CriarScript;
    private javax.swing.JButton btn_selectStopFiles;
    private javax.swing.JButton btn_stopFiles;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox ckb_1gram;
    private javax.swing.JCheckBox ckb_2gram;
    private javax.swing.JCheckBox ckb_3gram;
    private javax.swing.JCheckBox ckb_4gram;
    private javax.swing.JCheckBox ckb_arquivos;
    private javax.swing.JCheckBox ckb_boolean;
    private javax.swing.JCheckBox ckb_frequencia;
    private javax.swing.JCheckBox ckb_stdDev;
    private javax.swing.JCheckBox ckb_tf;
    private javax.swing.JCheckBox ckb_tfIdf;
    private javax.swing.JCheckBox ckb_tfIdfSmooth;
    private javax.swing.JCheckBox ckb_tfLinear;
    private javax.swing.JCheckBox ckb_tfLinearSmooth;
    private javax.swing.JFileChooser fc_baseDados;
    private javax.swing.JFileChooser fc_stopFiles;
    private javax.swing.JFileChooser fc_stopList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_Titulo;
    private javax.swing.JLabel lbl_baseDados;
    private javax.swing.JLabel lbl_calculoTermoFrequencia;
    private javax.swing.JLabel lbl_maxFiles;
    private javax.swing.JLabel lbl_maxFreq;
    private javax.swing.JLabel lbl_minFiles;
    private javax.swing.JLabel lbl_minFreq;
    private javax.swing.JLabel lbl_ngram;
    private javax.swing.JLabel lbl_stopFiles;
    private javax.swing.JRadioButton rd_combinado;
    private javax.swing.JRadioButton rd_individual;
    private javax.swing.JRadioButton rd_individualCombinado;
    private javax.swing.JTextField txt_BaseDados;
    private javax.swing.JTextField txt_maxFiles;
    private javax.swing.JTextField txt_maxFreq;
    private javax.swing.JTextField txt_minFiles;
    private javax.swing.JTextField txt_minFreq;
    private javax.swing.JTextArea txt_script;
    private javax.swing.JTextField txt_stdDev;
    private javax.swing.JTextArea txt_stopFileNames;
    private javax.swing.JTextField txt_stopFiles;
    // End of variables declaration//GEN-END:variables

}
